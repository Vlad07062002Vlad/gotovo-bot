# services/payments.py ‚Äî –≤–∏—Ç—Ä–∏–Ω–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π
from typing import Optional
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from services.usage import add_credits, activate_sub

# –í–∏—Ç—Ä–∏–Ω–∞ (BYN). Stars ‚Äî —á—É—Ç—å –¥–æ—Ä–æ–∂–µ (–∫–æ–º–∏—Å—Å–∏–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤).
BUY_PRESETS = {
    "credits": [
        ("CREDITS_50",   "50 –∫—Ä–µ–¥–∏—Ç–æ–≤",    "5 BYN",  "6 BYN"),   # (–∫–∞—Ä—Ç–∞/–ï–†–ò–ü, Stars)
        ("CREDITS_200",  "200 –∫—Ä–µ–¥–∏—Ç–æ–≤",  "18 BYN", "22 BYN"),
        ("CREDITS_1000", "1000 –∫—Ä–µ–¥–∏—Ç–æ–≤", "80 BYN", "99 BYN"),
    ],
    "subs": [
        ("SUB_MONTH", "–ü–æ–¥–ø–∏—Å–∫–∞ Pro (1 –º–µ—Å)", "39 BYN", "49 BYN"),
    ]
}

def build_buy_keyboard(stars_enabled: bool, card_url: Optional[str], erip_url: Optional[str]) -> InlineKeyboardMarkup:
    rows = []
    # –ö—Ä–µ–¥–∏—Ç—ã
    for pid, title, price_card, price_stars in BUY_PRESETS["credits"]:
        btns = []
        if stars_enabled:
            btns.append(InlineKeyboardButton(f"‚≠ê {title} ¬∑ {price_stars}", callback_data=f"buy_stars:{pid}"))
        if card_url:
            btns.append(InlineKeyboardButton(f"üí≥ {title} ¬∑ {price_card}", url=card_url))
        if erip_url:
            btns.append(InlineKeyboardButton(f"–ï–†–ò–ü {title}", url=erip_url))
        rows.append(btns)
    # –ü–æ–¥–ø–∏—Å–∫–∞
    for pid, title, price_card, price_stars in BUY_PRESETS["subs"]:
        btns = []
        if stars_enabled:
            btns.append(InlineKeyboardButton(f"‚≠ê {title} ¬∑ {price_stars}", callback_data=f"buy_stars:{pid}"))
        if card_url:
            btns.append(InlineKeyboardButton(f"üí≥ {title} ¬∑ {price_card}", url=card_url))
        if erip_url:
            btns.append(InlineKeyboardButton(f"–ï–†–ò–ü {title}", url=erip_url))
        rows.append(btns)
    return InlineKeyboardMarkup(rows)

def apply_payment_payload(user_id: int, payload: str) -> str:
    if payload.startswith("CREDITS_"):
        n = int(payload.split("_")[1])
        add_credits(user_id, n)
        return f"–ó–∞—á–∏—Å–ª–µ–Ω–æ {n} –∫—Ä–µ–¥–∏—Ç–æ–≤."
    if payload == "SUB_MONTH":
        activate_sub(user_id, 31)
        return "–ü–æ–¥–ø–∏—Å–∫–∞ Pro –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ 31 –¥–µ–Ω—å."
    return "–ü–ª–∞—Ç—ë–∂ –∑–∞—á—Ç—ë–Ω."

def get_stars_amount(payload: str) -> int:
    """–í–µ—Ä–Ω—É—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ Stars –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É payload."""
    if payload.startswith("CREDITS_"):
        for pid, _, _, price_stars in BUY_PRESETS["credits"]:
            if pid == payload:
                return int(price_stars.split()[0]) * 10
    if payload.startswith("SUB_"):
        for pid, _, _, price_stars in BUY_PRESETS["subs"]:
            if pid == payload:
                return int(price_stars.split()[0]) * 10
    raise ValueError("Unknown payload")
